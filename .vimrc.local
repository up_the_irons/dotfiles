set runtimepath+=~/.vim.local

" Directories for swp files
set backupdir=~/.vim/
set directory=~/.vim/

let mapleader=","

:se ai
:se expandtab
:se ts=2
:se sw=2

set wrap
set number
set ruler

:se pastetoggle=<F11>
:se backspace=eol,indent,start

" Whitespace stuff
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set list listchars=tab:\ \ ,trail:Â·

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

syntax on

" Better searching
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>

" Quick tabs
:nnoremap <C-l> gt
:nnoremap <C-h> gT

" Quick save
:nnoremap <C-s> :wa<CR>

set t_Co=256

:command Rtw :%s/\s\+$//e

" <Leader>t is used by the AlignMaps plugin quite a bit, so I changed
" this to <Leader>f.  Also, this fixes the large delay when invoking
" CommandT.
if !hasmapto(':CommandT<CR>')
  silent! nmap <unique> <silent> <Leader>f :CommandT<CR>
endif

" Abbreviations (insert mode)
"
" TODO: Only define these when not editing code
:ia th thank you
:ia Ty Thank you
:ia ty thank you
:ia th thanks
:ia Th Thanks
:ia lmk let me know
:ia Lmk Let me know
:ia bc because
:ia Bc Because
:ia rfc RFC
:ia wu what's up?
:ia w with
:ia wo without
:ia u you
:ia np no problem
:ia Np No problem
:ia ok OK
:ia i I
:ia vps VPS
:ia uuid UUID
:ia vpn VPN
:ia pa Please advise

" Spell check
:command Spell :setlocal spell spelllang=en_us

" Go
set runtimepath+=~/src/go/misc/vim
au BufRead,BufNewFile *.go set filetype=go

" Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru}    set ft=ruby

" add json syntax highlighting
au BufNewFile,BufRead *.json set ft=javascript

au BufRead,BufNewFile *.rst set filetype=rst

" Tweaks after I installed amix vimrc
" -----------------------------------

set noshowmode

set cmdheight=1

" fzf
let g:fzf_command_prefix='Fzf'
let g:fzf_buffers_jump=1
nnoremap <silent> <leader>o :FzfFiles<CR>
nnoremap <silent> <leader>b :FzfBuffers<CR>

" Comfortable motion
:unmap <c-b>
nnoremap <silent> <C-d> :call comfortable_motion#flick(100)<CR>
nnoremap <silent> <C-u> :call comfortable_motion#flick(-100)<CR>

" " -------------
" :cunmap <c-p>
" :unmap <c-f>
" :unmap <c-b>
